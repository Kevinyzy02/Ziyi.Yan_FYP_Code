// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[]  = "fae5f3eb-6c28-4a57-897a-bc05a5b9d479";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onSetRHHighChange();
void onSetRHLowChange();
void onSetTempHighChange();
void onSetTempLowChange();
void onA1HChange();
void onA1LChange();
void onA1MChange();
void onA2HChange();
void onA2LChange();
void onA2MChange();
void onB1HChange();
void onB1LChange();
void onB1MChange();
void onB2HChange();
void onB2LChange();
void onB2MChange();
void onC1HChange();
void onC1LChange();
void onC1MChange();
void onC2HChange();
void onC2LChange();
void onC2MChange();
void onD1HChange();
void onD1LChange();
void onD1MChange();
void onD2HChange();
void onD2LChange();
void onD2MChange();
void onE1HChange();
void onE1LChange();
void onE1MChange();
void onE2HChange();
void onE2LChange();
void onE2MChange();
void onRunStatusChange();
void onStartChange();

float setRHHigh;
float setRHLow;
float setTempHigh;
float setTempLow;
bool a1H;
bool a1L;
bool a1M;
bool a2H;
bool a2L;
bool a2M;
bool b1H;
bool b1L;
bool b1M;
bool b2H;
bool b2L;
bool b2M;
bool c1H;
bool c1L;
bool c1M;
bool c2H;
bool c2L;
bool c2M;
bool d1H;
bool d1L;
bool d1M;
bool d2H;
bool d2L;
bool d2M;
bool e1H;
bool e1L;
bool e1M;
bool e2H;
bool e2L;
bool e2M;
bool runStatus;
bool start;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(setRHHigh, READWRITE, ON_CHANGE, onSetRHHighChange);
  ArduinoCloud.addProperty(setRHLow, READWRITE, ON_CHANGE, onSetRHLowChange);
  ArduinoCloud.addProperty(setTempHigh, READWRITE, ON_CHANGE, onSetTempHighChange);
  ArduinoCloud.addProperty(setTempLow, READWRITE, ON_CHANGE, onSetTempLowChange);
  ArduinoCloud.addProperty(a1H, READWRITE, ON_CHANGE, onA1HChange);
  ArduinoCloud.addProperty(a1L, READWRITE, ON_CHANGE, onA1LChange);
  ArduinoCloud.addProperty(a1M, READWRITE, ON_CHANGE, onA1MChange);
  ArduinoCloud.addProperty(a2H, READWRITE, ON_CHANGE, onA2HChange);
  ArduinoCloud.addProperty(a2L, READWRITE, ON_CHANGE, onA2LChange);
  ArduinoCloud.addProperty(a2M, READWRITE, ON_CHANGE, onA2MChange);
  ArduinoCloud.addProperty(b1H, READWRITE, ON_CHANGE, onB1HChange);
  ArduinoCloud.addProperty(b1L, READWRITE, ON_CHANGE, onB1LChange);
  ArduinoCloud.addProperty(b1M, READWRITE, ON_CHANGE, onB1MChange);
  ArduinoCloud.addProperty(b2H, READWRITE, ON_CHANGE, onB2HChange);
  ArduinoCloud.addProperty(b2L, READWRITE, ON_CHANGE, onB2LChange);
  ArduinoCloud.addProperty(b2M, READWRITE, ON_CHANGE, onB2MChange);
  ArduinoCloud.addProperty(c1H, READWRITE, ON_CHANGE, onC1HChange);
  ArduinoCloud.addProperty(c1L, READWRITE, ON_CHANGE, onC1LChange);
  ArduinoCloud.addProperty(c1M, READWRITE, ON_CHANGE, onC1MChange);
  ArduinoCloud.addProperty(c2H, READWRITE, ON_CHANGE, onC2HChange);
  ArduinoCloud.addProperty(c2L, READWRITE, ON_CHANGE, onC2LChange);
  ArduinoCloud.addProperty(c2M, READWRITE, ON_CHANGE, onC2MChange);
  ArduinoCloud.addProperty(d1H, READWRITE, ON_CHANGE, onD1HChange);
  ArduinoCloud.addProperty(d1L, READWRITE, ON_CHANGE, onD1LChange);
  ArduinoCloud.addProperty(d1M, READWRITE, ON_CHANGE, onD1MChange);
  ArduinoCloud.addProperty(d2H, READWRITE, ON_CHANGE, onD2HChange);
  ArduinoCloud.addProperty(d2L, READWRITE, ON_CHANGE, onD2LChange);
  ArduinoCloud.addProperty(d2M, READWRITE, ON_CHANGE, onD2MChange);
  ArduinoCloud.addProperty(e1H, READWRITE, ON_CHANGE, onE1HChange);
  ArduinoCloud.addProperty(e1L, READWRITE, ON_CHANGE, onE1LChange);
  ArduinoCloud.addProperty(e1M, READWRITE, ON_CHANGE, onE1MChange);
  ArduinoCloud.addProperty(e2H, READWRITE, ON_CHANGE, onE2HChange);
  ArduinoCloud.addProperty(e2L, READWRITE, ON_CHANGE, onE2LChange);
  ArduinoCloud.addProperty(e2M, READWRITE, ON_CHANGE, onE2MChange);
  ArduinoCloud.addProperty(runStatus, READWRITE, ON_CHANGE, onRunStatusChange);
  ArduinoCloud.addProperty(start, READWRITE, ON_CHANGE, onStartChange);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
